---
# Workstation as Code
# Copyright Nicola Musatti 2020 - 2025.

- name: Install deltarpm support (EL 8, Fedora)
  ansible.builtin.dnf:
    name: "{{ packages }}"
  vars:
    packages:
      - drpm
  become: true
  when: waco_platform in ('EL8', 'Fedora')

- name: Install GnuPG 2 (EL 10)
  ansible.builtin.dnf:
    name: "{{ packages }}"
  vars:
    packages:
      - gnupg2
  become: true
  when: waco_platform in ('EL10')

- name: Enable the EPEL repository (EL 10, EL 9, EL 8)
  ansible.builtin.include_role:
    name: geerlingguy.repo-epel
  when: waco_platform in ('EL10', 'EL9', 'EL8')

- name: Enable the PowerTools repository (EL 10, EL 9, EL 8)
  ansible.builtin.include_tasks:
    file: powertools.yml
  when: waco_platform in ('EL10', 'EL9', 'EL8')

- name: Install essential packages (Ubuntu)
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
  become: true
  when: waco_platform == 'Ubuntu'

- name: Retrieve package architecture
  ansible.builtin.command: "dpkg --print-architecture"
  register: dpkg_architecture
  changed_when: False
  when: waco_platform == 'Ubuntu'

- name: Retrieve LSB release
  ansible.builtin.command: "lsb_release -cs"
  register: lsb_release
  changed_when: False
  when: waco_platform == 'Ubuntu'

- name: Install Docker
  ansible.builtin.include_tasks:
    file: docker.yml
  when: waco_has_docker

- name: Install Dropbox
  ansible.builtin.include_tasks:
    file: dropbox.yml
  when: waco_has_dropbox

- name: Install Python
  ansible.builtin.include_role:
    name: waco_org.waco_python
  when: waco_has_python

- name: Install system packages (EL10, EL 9, EL 8, Fedora)
  ansible.builtin.dnf:
    name: "{{ packages }}"
  vars:
    packages: "{{ waco_packages }}"
  become: true
  when: waco_platform in ('EL10', 'EL9', 'EL8', 'Fedora')

- name: Install system packages (Ubuntu)
  ansible.builtin.apt:
    name: "{{ packages }}"
  vars:
    packages: "{{ waco_packages }}"
  become: true
  when: waco_platform == 'Ubuntu'

- name: Install system-wide flatpak apps
  ansible.builtin.include_tasks:
    file: flatpak.yml
  vars:
    flatpak_remote: flathub
    flatpak_url: "https://dl.flathub.org/repo/flathub.flatpakrepo"
    flatpak_method: system
    flatpak_apps: "{{ waco_flatpak_apps }}"
  when: ansible_os_family == 'RedHat' and waco_flatpak_apps | length > 0

- name: Install grsync
  ansible.builtin.include_tasks:
    file: grsync.yml
  when: waco_has_grsync

- name: Install Maven
  ansible.builtin.include_tasks:
    file: maven.yml
  when: waco_has_maven

- name: Install the official Hashicorp repository
  ansible.builtin.include_tasks:
    file: hashicorp.yml
  when: waco_has_packer or waco_has_vagrant

- name: Install Packer
  ansible.builtin.include_tasks:
    file: packer.yml
  when: waco_has_packer

- name: Install Vagrant
  ansible.builtin.include_tasks:
    file: vagrant.yml
  when: waco_has_vagrant

- name: Install VirtualBox
  ansible.builtin.include_tasks:
    file: virtualbox.yml
  when: waco_has_virtualbox

- name: Install Visual Studio Code
  ansible.builtin.include_tasks:
    file: vscode.yml
  when: waco_has_vscode

- name: Install user specific components
  ansible.builtin.include_tasks:
    file: user.yml
  vars:
    user: "{{ item }}"
    dict: "{{ waco_user_settings[item] | default(waco_user_defaults) }}"
    user_has_rust: "{{ dict['has_rust'] | default(waco_user_defaults['has_rust']) }}"
    user_flatpak_apps: "{{ dict['flatpak_apps'] | default(waco_user_defaults['flatpak_apps']) }}"
  loop: "{{ waco_users }}"
